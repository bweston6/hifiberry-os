diff --git a/src/playlist/plugins/XspfPlaylistPlugin.cxx b/src/playlist/plugins/XspfPlaylistPlugin.cxx
index 92711c53d..8c396f597 100644
--- a/src/playlist/plugins/XspfPlaylistPlugin.cxx
+++ b/src/playlist/plugins/XspfPlaylistPlugin.cxx
@@ -44,7 +44,7 @@ struct XspfParser {
 	 */
 	enum {
 		ROOT, PLAYLIST, TRACKLIST, TRACK,
-		TAG, LOCATION,
+		TAG, LOCATION, DURATION,
 	} state = ROOT;
 
 	/**
@@ -54,6 +54,11 @@ struct XspfParser {
 	 */
 	TagType tag_type;
 
+	/**
+	 * the current song duration in ms.
+	 */
+	long duration;
+
 	/**
 	 * The current song URI.  It is set by the "location" element.
 	 */
@@ -106,9 +111,12 @@ xspf_start_element(void *user_data, const XML_Char *element_name,
 		break;
 
 	case XspfParser::TRACK:
-		if (strcmp(element_name, "location") == 0)
+		if (strcmp(element_name, "location") == 0) {
 			parser->state = XspfParser::LOCATION;
-		else if (!parser->location.empty()) {
+		} else if (!parser->location.empty() &&
+			   strcmp(element_name, "duration") == 0) {
+			parser->state = XspfParser::DURATION;
+		} else if (!parser->location.empty()) {
 			parser->tag_type = tag_table_lookup(xspf_tag_elements,
 							    element_name);
 			if (parser->tag_type != TAG_NUM_OF_ITEM_TYPES)
@@ -118,6 +126,7 @@ xspf_start_element(void *user_data, const XML_Char *element_name,
 		break;
 
 	case XspfParser::TAG:
+	case XspfParser::DURATION:
 	case XspfParser::LOCATION:
 		break;
 	}
@@ -168,6 +177,14 @@ xspf_end_element(void *user_data, const XML_Char *element_name)
 		parser->location = std::move(parser->value);
 		parser->state = XspfParser::TRACK;
 		break;
+
+	case XspfParser::DURATION:
+		if (!parser->value.empty()) {
+			parser->duration = stol(parser->value);
+			parser->tag_builder.SetDuration(SignedSongTime::FromMS(parser->duration));
+		}
+		parser->state = XspfParser::TRACK;
+		break;
 	}
 
 	parser->value.clear();
@@ -187,6 +204,7 @@ xspf_char_data(void *user_data, const XML_Char *s, int len)
 
 	case XspfParser::TAG:
 	case XspfParser::LOCATION:
+	case XspfParser::DURATION:
 		parser->value.append(s, len);
 		break;
 	}
